package bank;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;

public class BankerFrame extends javax.swing.JFrame {
    User banker;
    DBManager dbManager;
    
    /**
     * Creates new form BankerFrame
     */
    public BankerFrame(User banker) {
        initComponents();
        this.banker = banker;
        this.dbManager = new DBManager();
        
        loadCustomers();
        
        TCustomers.getSelectionModel().addListSelectionListener((ListSelectionEvent event) -> {
            if(event.getValueIsAdjusting()) return;
            int selectedRow = TCustomers.getSelectedRow();
            if(selectedRow > -1 == false) return;
            int customerId = (int)TCustomers.getValueAt(selectedRow, 0);
            if(customerId > 0 == false) return;
            this.customerSelected(customerId);
        });
        
        TAccounts.getSelectionModel().addListSelectionListener((ListSelectionEvent event) -> {
            if(event.getValueIsAdjusting()) return;
            int selectedRow = TAccounts.getSelectedRow();
            if(selectedRow > -1 == false) return;
            int customerId = (int)TAccounts.getValueAt(selectedRow, 0);
            int accountId = (int)TAccounts.getValueAt(selectedRow, 2);
            if(customerId > 0 == false) return;
            this.accountSelected(customerId, accountId);
        });
    }
    
    public void customerSelected(int customerId) {
        User customer = new User(this.dbManager, customerId);
        TFId.setText(String.valueOf(customer.getId()));
        TFUsername.setText(customer.getUsername());
        TFPassword.setText(customer.getPassword());
        TFFirstname.setText(customer.getFirstname());
        TFLastname.setText(customer.getLastname());
        BCreateCustomer.setEnabled(false);
        BUpdateCustomer.setEnabled(true);
        BDeleteCustomer.setEnabled(true);
        
        TFAccountName.setText("");
        TFAmount.setText("");
        BCreateAccount.setEnabled(true);
        BDeposit.setEnabled(false);
        BWithdrawal.setEnabled(false);
        
        this.loadAccounts(customerId);
    }
    
    public void accountSelected(int customerId, int accountId) {
        BDeposit.setEnabled(true);
        BWithdrawal.setEnabled(true);
    }
    
    private void loadCustomers() {
        DefaultTableModel table = (DefaultTableModel)TCustomers.getModel();
        table.setRowCount(0);
        
        ArrayList<User> customers = this.dbManager.getUsers("customer");
        for (User customer : customers) {
            table.addRow(new Object[]{
                customer.getId(),
                customer.getUsername(),
                customer.getPassword(),
                customer.getFirstname(),
                customer.getLastname(),
            });
        }
    }
    
    private void loadAccounts(int customerId) {
        User customer = new User(this.dbManager, customerId);
        DefaultTableModel table = (DefaultTableModel)TAccounts.getModel();
        table.setRowCount(0);
        
        ArrayList<Account> accounts = customer.getAccounts();
        for (Account account : accounts) {
            table.addRow(new Object[]{
                customer.getId(),
                customer.getUsername(),
                account.getId(),
                account.getName(),
                account.getBalance(),
            });
        }
        
        BDeposit.setEnabled(false);
        BWithdrawal.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BClear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        TFId = new javax.swing.JTextField();
        TFUsername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TFPassword = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TFFirstname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        TFLastname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        BCreateCustomer = new javax.swing.JButton();
        BUpdateCustomer = new javax.swing.JButton();
        BDeleteCustomer = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TCustomers = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TAccounts = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        TFAccountName = new javax.swing.JTextField();
        BCreateAccount = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        TFAmount = new javax.swing.JTextField();
        BDeposit = new javax.swing.JButton();
        BWithdrawal = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Banka - Bankacı Paneli");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        BClear.setText("Temizle");
        BClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BClearActionPerformed(evt);
            }
        });

        jLabel1.setText("ID");

        TFId.setEnabled(false);

        jLabel2.setText("Kullanıcı Adı");

        jLabel3.setText("Parola");

        jLabel4.setText("Ad");

        jLabel5.setText("Soyad");

        BCreateCustomer.setText("Ekle");
        BCreateCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCreateCustomerActionPerformed(evt);
            }
        });

        BUpdateCustomer.setText("Güncelle");
        BUpdateCustomer.setEnabled(false);
        BUpdateCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUpdateCustomerActionPerformed(evt);
            }
        });

        BDeleteCustomer.setText("Sil");
        BDeleteCustomer.setEnabled(false);
        BDeleteCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BDeleteCustomerActionPerformed(evt);
            }
        });

        TCustomers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Kullanıcı Adı", "Parola", "Ad", "Soyad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TCustomers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TCustomers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(TCustomers);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Müşteriler");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TFLastname, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TFId, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                                .addComponent(TFUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TFPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TFFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BCreateCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BUpdateCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BDeleteCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(TFId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(TFUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TFPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TFFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(TFLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BCreateCustomer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BUpdateCustomer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BDeleteCustomer)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        TAccounts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kullanıcı No", "Kullanıcı Adı", "Hesap No", "Hesap Adı", "Bakiye"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TAccounts.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TAccounts.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(TAccounts);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Banka Hesapları");

        jLabel8.setText("Hesap Adı");

        BCreateAccount.setText("Ekle");
        BCreateAccount.setEnabled(false);
        BCreateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCreateAccountActionPerformed(evt);
            }
        });

        jLabel9.setText("Para Miktarı");

        BDeposit.setText("Yatır");
        BDeposit.setEnabled(false);
        BDeposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BDepositActionPerformed(evt);
            }
        });

        BWithdrawal.setText("Çek");
        BWithdrawal.setEnabled(false);
        BWithdrawal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BWithdrawalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TFAccountName, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BCreateAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TFAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BDeposit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BWithdrawal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel7))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(TFAccountName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BCreateAccount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(TFAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BDeposit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BWithdrawal)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void clearCustomerFields() {
        TFId.setText("");
        TFUsername.setText("");
        TFPassword.setText("");
        TFFirstname.setText("");
        TFLastname.setText("");
        BCreateCustomer.setEnabled(true);
        BUpdateCustomer.setEnabled(false);
        BDeleteCustomer.setEnabled(false);
        TCustomers.getSelectionModel().clearSelection();
        
        this.clearAccountFields();
    }
    
    private void clearAccountFields() {
        DefaultTableModel table = (DefaultTableModel)TAccounts.getModel();
        table.setRowCount(0);
        
        TAccounts.getSelectionModel().clearSelection();
        TFAccountName.setText("");
        TFAmount.setText("");
        BCreateAccount.setEnabled(false);
        BDeposit.setEnabled(false);
        BWithdrawal.setEnabled(false);
    }
    
    private void BClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BClearActionPerformed
        this.clearCustomerFields();
    }//GEN-LAST:event_BClearActionPerformed

    private void BCreateCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCreateCustomerActionPerformed
        String username = TFUsername.getText();
        String password = TFPassword.getText();
        String firstname = TFFirstname.getText();
        String lastname = TFLastname.getText();
        String role = "customer";

        Boolean isUsernameExists = this.dbManager.isUsernameExists(username);
        if(isUsernameExists) {
            JOptionPane.showMessageDialog(null, "Kullanıcı adı zaten kullanılıyor!", "Hata", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(username.isEmpty() || password.isEmpty() || firstname.isEmpty() || lastname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Boş alan bırakmayınız!", "Hata", JOptionPane.ERROR_MESSAGE);
            return;
        }

        User customer = new User(this.dbManager, 0, username, password, firstname, lastname, role);
        Boolean status = customer.save();
        if(status) {
            this.loadCustomers();
            this.clearCustomerFields();
        }
    }//GEN-LAST:event_BCreateCustomerActionPerformed

    private void BUpdateCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUpdateCustomerActionPerformed
        int id = Integer.parseInt(TFId.getText());
        String username = TFUsername.getText();
        String password = TFPassword.getText();
        String firstname = TFFirstname.getText();
        String lastname = TFLastname.getText();
        String role = "customer";

        if(username.isEmpty() || password.isEmpty() || firstname.isEmpty() || lastname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Boş alan bırakmayınız!", "Hata", JOptionPane.ERROR_MESSAGE);
            return;
        }

        User customer = new User(this.dbManager, id, username, password, firstname, lastname, role);
        Boolean status = customer.save();
        if(status) {
            int selectedRow = TCustomers.getSelectedRow();
            this.loadCustomers();
            TCustomers.setRowSelectionInterval(selectedRow, selectedRow);
        }
    }//GEN-LAST:event_BUpdateCustomerActionPerformed

    private void BDeleteCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BDeleteCustomerActionPerformed
        int id = Integer.parseInt(TFId.getText());

        User customer = new User(this.dbManager, id);
        Boolean status = customer.delete();
        if(status) {
            this.loadCustomers();
            this.clearCustomerFields();
        }
    }//GEN-LAST:event_BDeleteCustomerActionPerformed

    private void BCreateAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCreateAccountActionPerformed
        String accountName = TFAccountName.getText();
        
        int selectedRow = TCustomers.getSelectedRow();
        int customerId = (int)TCustomers.getValueAt(selectedRow, 0);
        User customer = new User(this.dbManager, customerId);
        
        Boolean status = customer.createAccount(accountName);
        if (status) {
            TFAccountName.setText("");
            this.loadAccounts(customerId);
        }
    }//GEN-LAST:event_BCreateAccountActionPerformed

    private void BDepositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BDepositActionPerformed
        float amount = 0;
        try {
            amount = Float.parseFloat(TFAmount.getText());
        } catch (Exception e) {}
        
        if(amount <= 0) {
            JOptionPane.showMessageDialog(null, "Lütfen geçerli bir miktar giriniz!", "Hata", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int selectedRow = TAccounts.getSelectedRow();
        int customerId = (int)TAccounts.getValueAt(selectedRow, 0);
        int accountId = (int)TAccounts.getValueAt(selectedRow, 2);
        User customer = new User(this.dbManager, customerId);
        Account account = customer.getAccountById(accountId);
        
        Boolean status = account.deposit(amount);
        if(status) {
            TFAmount.setText("");
            this.loadAccounts(customerId);
            TAccounts.setRowSelectionInterval(selectedRow, selectedRow);
        }
    }//GEN-LAST:event_BDepositActionPerformed

    private void BWithdrawalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BWithdrawalActionPerformed
        float amount = 0;
        try {
            amount = Float.parseFloat(TFAmount.getText());
        } catch (Exception e) {}
        
        if(amount <= 0) {
            JOptionPane.showMessageDialog(null, "Lütfen geçerli bir miktar giriniz!", "Hata", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int selectedRow = TAccounts.getSelectedRow();
        int customerId = (int)TAccounts.getValueAt(selectedRow, 0);
        int accountId = (int)TAccounts.getValueAt(selectedRow, 2);
        User customer = new User(this.dbManager, customerId);
        Account account = customer.getAccountById(accountId);
        
        float balance = account.getBalance();
        if(amount > balance) {
            JOptionPane.showMessageDialog(null, "Çekilen miktar bakiyeyi geçemez!", "Hata", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Boolean status = account.withdrawal(amount);
        if(status) {
            TFAmount.setText("");
            this.loadAccounts(customerId);
            TAccounts.setRowSelectionInterval(selectedRow, selectedRow);
        }
    }//GEN-LAST:event_BWithdrawalActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BClear;
    private javax.swing.JButton BCreateAccount;
    private javax.swing.JButton BCreateCustomer;
    private javax.swing.JButton BDeleteCustomer;
    private javax.swing.JButton BDeposit;
    private javax.swing.JButton BUpdateCustomer;
    private javax.swing.JButton BWithdrawal;
    private javax.swing.JTable TAccounts;
    private javax.swing.JTable TCustomers;
    private javax.swing.JTextField TFAccountName;
    private javax.swing.JTextField TFAmount;
    private javax.swing.JTextField TFFirstname;
    private javax.swing.JTextField TFId;
    private javax.swing.JTextField TFLastname;
    private javax.swing.JTextField TFPassword;
    private javax.swing.JTextField TFUsername;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
